{{- if .Values.userService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "todo-app.labels" . | nindent 4 }}
    component: user-service
spec:
  replicas: {{ .Values.userService.replicaCount }}
  selector:
    matchLabels:
      {{- include "todo-app.selectorLabels" . | nindent 6 }}
      component: user-service
  template:
    metadata:
      labels:
        {{- include "todo-app.selectorLabels" . | nindent 8 }}
        component: user-service
    spec:
      containers:
      - name: user-service
        image: "{{ .Values.global.imageRegistry }}{{ .Values.userService.image.repository }}:{{ .Values.userService.image.tag }}"
        imagePullPolicy: {{ .Values.userService.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.userService.service.port }}
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: secret-key
        - name: ENVIRONMENT
          value: {{ .Values.global.environment | quote }}
        {{- if ne .Values.global.environment "local" }}
        - name: DB_HOST
          value: {{ .Values.database.host | quote }}
        - name: DB_PORT
          value: {{ .Values.database.port | quote }}
        - name: DB_NAME
          value: {{ .Values.database.name | quote }}
        - name: DB_USER
          value: {{ .Values.database.user | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: password
        {{- end }}
        {{- if .Values.userService.healthCheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.userService.healthCheck.path }}
            port: {{ .Values.userService.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: {{ .Values.userService.healthCheck.path }}
            port: {{ .Values.userService.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end }}
        resources:
          {{- toYaml .Values.userService.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "todo-app.labels" . | nindent 4 }}
    component: user-service
spec:
  selector:
    {{- include "todo-app.selectorLabels" . | nindent 4 }}
    component: user-service
  ports:
  - port: {{ .Values.userService.service.port }}
    targetPort: {{ .Values.userService.service.port }}
    protocol: TCP
  type: {{ .Values.userService.service.type }}
{{- end }}
